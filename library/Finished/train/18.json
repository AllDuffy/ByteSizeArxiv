{
    "id": "C:\\Users\\Al\\Documents\\ByteSizeArxiv\\library\\trainTokenized\\0602062v1",
    "article": [
        "conclusion we have defined an inference algorithme dees designed to learn rational stochastic languages which strictly contains the class of stochastic languages computable by pa . we have shown that the class of rational stochastic languages over q is strongly identifiable in the limit . moreover dees is an efficient inference algorithm which can be used in practical cases of grammatical inference . the experiments we have already carried out confirm the theoretical results of this paper the fact that dees aims at building a natural and minimal representation of the target provides a very significant improvement of the results obtained by classical probabilistic inference algorithms ."
    ],
    "abstract": [
        "given a finite set of words w ... wn independently drawn according to a fixed unknown distribution law p called a stochastic language an usual goal in grammatical inference is to infer an estimate of p in some class of probabilistic models such as probabilistic automata . here we study the class of rational stochastic languages which consists in stochastic languages that can be generated by multiplicity automata and which strictly includes the class of stochastic languages generated by pa . rational stochastic languages have minimal normal representation which may be very concise and whose parameters can be efficiently estimated from stochastic samples . we design an efficient inference algorithm dees which aims at building a minimal normal representation of the target . despite the fact that no recursively enumerable class of ma computes exactly the set of rational stochastic languages over q we show that dees strongly identifies tis set in the limit . we study the intermediary ma output by dees and show that they compute rational series which converge absolutely to one and which can be used to provide stochastic languages which closely estimate the target ."
    ],
    "extracted": [
        0
    ],
    "score": [
        0.2
    ]
}